module(
    name = "wordsonsand",
    version = "1.0",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")

# If the Gazelle plugin is needed:
bazel_dep(name = "bazel_skylib_gazelle_plugin", version = "1.7.1", dev_dependency = True)

bazel_dep(name = "rules_go", version = "0.55.0")
bazel_dep(name = "gazelle", version = "0.43.0")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_adrg_frontmatter",
    "com_github_aws_aws_sdk_go_v2",
    "com_github_aws_aws_sdk_go_v2_config",
    "com_github_aws_aws_sdk_go_v2_credentials",
    "com_github_aws_aws_sdk_go_v2_service_ssm",
    "com_github_aws_aws_sdk_go_v2_service_sts",
    "com_github_pulumi_pulumi_aws_sdk_v6",
    "com_github_pulumi_pulumi_sdk_v3",
    "com_github_stretchr_testify",
    "com_github_urfave_cli_v3",
    "in_gopkg_yaml_v2",
    "in_gopkg_yaml_v3",
)

bazel_dep(name = "bazel-diff", version = "9.0.3")
bazel_dep(name = "rules_zig", version = "0.8.0")
bazel_dep(name = "protobuf", version = "31.1")

zig = use_extension(
    "@rules_zig//zig:extensions.bzl",
    "zig",
    dev_dependency = True,
)
zig.toolchain(zig_version = "0.14.0")
use_repo(zig, "zig_toolchains")

zig_toml_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

zig_toml_archive(
    name = "zig_toml",
    build_file_content = """
load("@rules_zig//zig:defs.bzl", "zig_module")
zig_module(
    name = "toml",
    main = "src/root.zig",
    srcs = glob(["src/**/*.zig"]),
    visibility = ["//visibility:public"],
)
""",
    sha256 = "b1f0846c3b5e9696892b0d96f8add4878c057c728623b03d6bfbd508e4af48d5",
    strip_prefix = "zig-toml-main",
    urls = ["https://github.com/sam701/zig-toml/archive/refs/heads/main.zip"],
)

bazel_dep(name = "rules_python", version = "1.4.1")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.13",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.13",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pypi")

# The following stanza defines the dependency rules_python_gazelle_plugin.
# For typical setups you set the version.
bazel_dep(name = "rules_python_gazelle_plugin", version = "1.4.1")
